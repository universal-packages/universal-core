import { BaseModule } from '@universal-packages/core-app'

export default class ExampleModule extends BaseModule {
  public static readonly moduleName = 'example-module'
  public static readonly description = 'A module normally wrapps a thrid party module into being compatible with Core App'

  /**
   * REQUIRED
   *
   * Modules are loaded before the app is loaded, so the app
   * can access all modules to prepare itself,
   *
   * And every time a module is loaded its preapre method will be callled
   * after instantiation, so all sort of preaprations can be made to leave
   * the module reary to be used accross the app
   *
   * As well as apps configuration with the same name as the module
   * will be passed as this.options
   *
   * ./src/config/example-module.yaml
   *
   * And also a Logger object can be accessed via
   *
   * this.logger
   *
   * To publish any events ypur module would want to communicate
   *
   *
   * */
  public async prepare(): Promise<void> {}

  /**
   * REQUIRED
   *
   * Modules normaly will release any connections to local services
   * such as data bases, that can be done here.
   *
   * */
  public async release(): Promise<void> {
  }
}
